{"version":3,"sources":["../../../src/components/ui/alert.tsx","../../../src/lib/utils.ts"],"sourcesContent":["import { cva } from 'class-variance-authority';\nimport * as React from 'react';\n\nimport { X } from 'lucide-react';\nimport { cn } from '../../lib/utils';\nimport { BannerProps } from '../../types';\n\nconst alertVariants = cva(\n  'text-gray-30 flex flex-col gap-6 rounded-xl p-6 shadow-sm w-full border-[0.5px] border-gray-0/20 bg-blur transition-colors duration-200 ease-in-out bg-gray-0/8 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-gray-950 [&>svg~*]:pl-7 dark:border-gray-800 dark:[&>svg]:text-gray-50 relative',\n  {\n    variants: {\n      variant: {\n        default: '',\n        destructive:\n          'border-red-500/50 text-red-500 dark:border-red-500 [&>svg]:text-red-500 dark:border-red-900/50 dark:text-red-900 dark:dark:border-red-900 dark:[&>svg]:text-red-900',\n        closeable: 'data-[closed=true]:hidden',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  }\n);\n\nconst Alert = React.forwardRef<HTMLDivElement, BannerProps>(\n  ({ className, variant, children, isOpen = true, onClose, ...props }, ref) => {\n    const [internalIsOpen, setInternalIsOpen] = React.useState(isOpen);\n\n    const handleClose = () => {\n      setInternalIsOpen(false);\n      onClose?.();\n    };\n\n    return variant === 'closeable' ? (\n      internalIsOpen && (\n        <div ref={ref} role=\"alert\" className={cn(alertVariants({ variant }), className)} {...props}>\n          <button onClick={handleClose} className=\"absolute top-2 right-2 cursor-pointer hover:text-gray-10\">\n            <X />\n            <span className=\"sr-only\">Close</span>\n          </button>\n          {children}\n        </div>\n      )\n    ) : (\n      <div ref={ref} role=\"alert\" className={cn(alertVariants({ variant }), className)} {...props}>\n        {children}\n      </div>\n    );\n  }\n);\nAlert.displayName = 'Alert';\n\nconst AlertTitle = React.forwardRef<HTMLHeadingElement, React.HTMLAttributes<HTMLHeadingElement>>(\n  ({ className, ...props }, ref) => (\n    <h5 ref={ref} className={cn('mb-1 font-medium leading-none tracking-tight', className)} {...props} />\n  )\n);\nAlertTitle.displayName = 'AlertTitle';\n\nconst AlertDescription = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn('text-sm [&_p]:leading-relaxed', className)} {...props} />\n  )\n);\nAlertDescription.displayName = 'AlertDescription';\n\nexport { Alert, AlertDescription, AlertTitle };\n","import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAoB;AACpB,YAAuB;AAEvB,0BAAkB;;;ACHlB,kBAAsC;AACtC,4BAAwB;AAEjB,SAAS,MAAM,QAAsB;AAC1C,aAAO,mCAAQ,kBAAK,MAAM,CAAC;AAC7B;;;AD+BU;AA7BV,IAAM,oBAAgB;AAAA,EACpB;AAAA,EACA;AAAA,IACE,UAAU;AAAA,MACR,SAAS;AAAA,QACP,SAAS;AAAA,QACT,aACE;AAAA,QACF,WAAW;AAAA,MACb;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,MACf,SAAS;AAAA,IACX;AAAA,EACF;AACF;AAEA,IAAM,QAAc;AAAA,EAClB,CAAC,IAAoE,QAAQ;AAA5E,iBAAE,aAAW,SAAS,UAAU,SAAS,MAAM,QAzBlD,IAyBG,IAA2D,kBAA3D,IAA2D,CAAzD,aAAW,WAAS,YAAU,UAAe;AAC9C,UAAM,CAAC,gBAAgB,iBAAiB,IAAU,eAAS,MAAM;AAEjE,UAAM,cAAc,MAAM;AACxB,wBAAkB,KAAK;AACvB;AAAA,IACF;AAEA,WAAO,YAAY,cACjB,kBACE,6CAAC,sCAAI,KAAU,MAAK,SAAQ,WAAW,GAAG,cAAc,EAAE,QAAQ,CAAC,GAAG,SAAS,KAAO,QAArF,EACC;AAAA,mDAAC,YAAO,SAAS,aAAa,WAAU,4DACtC;AAAA,oDAAC,yBAAE;AAAA,QACH,4CAAC,UAAK,WAAU,WAAU,mBAAK;AAAA,SACjC;AAAA,MACC;AAAA,QACH,IAGF,4CAAC,sCAAI,KAAU,MAAK,SAAQ,WAAW,GAAG,cAAc,EAAE,QAAQ,CAAC,GAAG,SAAS,KAAO,QAArF,EACE,WACH;AAAA,EAEJ;AACF;AACA,MAAM,cAAc;AAEpB,IAAM,aAAmB;AAAA,EACvB,CAAC,IAAyB,QAAK;AAA9B,iBAAE,YArDL,IAqDG,IAAgB,kBAAhB,IAAgB,CAAd;AACD,uDAAC,uBAAG,KAAU,WAAW,GAAG,gDAAgD,SAAS,KAAO,MAAO;AAAA;AAEvG;AACA,WAAW,cAAc;AAEzB,IAAM,mBAAyB;AAAA,EAC7B,CAAC,IAAyB,QAAK;AAA9B,iBAAE,YA5DL,IA4DG,IAAgB,kBAAhB,IAAgB,CAAd;AACD,uDAAC,wBAAI,KAAU,WAAW,GAAG,iCAAiC,SAAS,KAAO,MAAO;AAAA;AAEzF;AACA,iBAAiB,cAAc;","names":[]}